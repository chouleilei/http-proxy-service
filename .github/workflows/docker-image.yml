name: Build and Push Docker Image

on:
  push:
    branches: [ "main", "master" ]
    # 当推送标签时也触发构建
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "master" ]

env:
  # 使用 ghcr.io 作为容器注册表
  REGISTRY: ghcr.io
  # github.repository 格式为 <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # 这是用来完成身份验证 `sigstore/cosign` 的
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # 设置 BuildKit Docker 容器构建器
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # 登录到容器注册表，除非是 PR
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 提取 Docker 的元数据（标签、标记）
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      # 构建并推送 Docker 镜像
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # 使用 cosign 签名容器镜像
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # 这一步使用身份令牌来提供短期证书
        # 这些证书只在作业运行时有效，因此后续的重新运行将自动获得新的证书。
        # 不需要手动管理证书的生命周期。
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
